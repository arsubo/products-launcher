version: '3'

services:

  nats-server:
    image: nats:latest 

  client-gateway:
    build: 
      context: ./client-gateway
      dockerfile: dockerfile.prod
    image: client-gateway-prod   
    ports:
      - ${CLIENT_GATEWAY_PORT}:${CLIENT_GATEWAY_PORT}    
    environment: 
      - PORT=${CLIENT_GATEWAY_PORT}
      - NATS_SERVERS=nats:${NAT_SERVER}

  auth-ms:
    build: 
      context: ./auth-ms
      dockerfile: dockerfile.prod
    image: auth-ms
    environment:      
      - PORT=3000
      - NATS_SERVERS=nats:${NAT_SERVER}
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}

  products-ms:
    build: 
        context: ./products-ms
        dockerfile: dockerfile.prod
    image: products-ms
    environment: 
      - PORT=${PRODUCT_MS_PORT}
      - DATABASE_URL=file:${PRODUCT_DB}
      - NATS_SERVERS=nats:${NAT_SERVER}


# Orders MS
  orders-ms:
    build: 
        context: ./orders-ms
        dockerfile: dockerfile.prod
        args:
          - ORDERS_DATABASE_URL=${ORDERS_DATABASE_URL}
    image: orders-ms
    environment: 
      - PORT=${ORDERS_MS_PORT}
      - DATABASE_URL=${ORDERS_DATABASE_URL}
      - NATS_SERVERS=${NAT_SERVER}

# # Orders DB USAREMOS POSTGRES EN LA NUBE 

#============================
# Payments Microservice
#===========================
  payments-ms:   
    container_name: payments-ms
    build: ./payments-ms
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - ${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}
    environment: 
      - PORT=${PAYMENTS_MS_PORT}      
      - NATS_SERVERS=${NAT_SERVER}         
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}